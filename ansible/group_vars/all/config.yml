---
environments:
  - development
  - production

# vm vars
vm_name: new_pg_app
vm_os: ubuntu/trusty64

# server vars
server_name: localhost

# base vars
package_bundles:
packages:

# ruby vars
ruby_install: rvm
ruby_version: 2.2.1
manual_ruby_version: 2.3.1
ruby_user_name: "{{ 'root' if ruby_install == 'package' else user_name }}"

# git vars
git_url: git@bitbucket.org:amilgrom/new_pg_app.git
git_branch: master

# db vars
databases:
  - postgresql
postgresql_db_name: new_pg_app
postgresql_db_user: db_usr
postgresql_db_password: db_pswd # need to move to secret file
postgresql_extensions:

# ownership vars
app_name: "{{ vm_name }}"
user_name: "{{ 'vagrant' if target == 'virtualbox' else app_name }}"
group_name: "{{ user_name }}"

# directory structure vars
path: /new_pg_app
user_home_path: "/home/{{ user_name }}"

releases_path: "{{ path }}/releases"
shared_path: "{{ path }}/shared"
environment_file: "{{ shared_path }}/.envrc"

app_path: "{{ path }}{{ '/current' if target != 'virtualbox' else '' }}"
app_public_path: "{{ app_path }}/public"
app_config_path: "{{ app_path }}/config"
shared_config_path: "{{ app_path if target == 'virtualbox' else shared_path }}/config"
app_temp_path: "/tmp{{ app_path }}"
app_logs_path: "{{ app_path }}/log"

# webserver vars
server_type: nginx_puma

# puma vars
puma_bind_path: "unix://{{ app_temp_path }}/sockets/puma.{{ rails_env }}.sock"
puma_config_path: "{{ app_config_path }}/puma.{{ rails_env }}.rb"
puma_pidfile_path: "{{ app_temp_path }}/pids/puma.{{ rails_env }}.pid"
puma_stderr_redirect_path: "{{ app_logs_path }}/puma.{{ rails_env }}.err.log"
puma_stdout_redirect_path: "{{ app_logs_path }}/puma.{{ rails_env }}.log"

# nginx vars
ssl_certificate_path: "/etc/nginx/ssl/{{ server_name }}.crt"
ssl_certificate_key_path: "/etc/nginx/ssl/{{ server_name }}.key"

# apt vars
use_apt_proxy: false
